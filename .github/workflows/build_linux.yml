name: Build Linux

on:
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.gradle/caches
          key: ${{ runner.os }}-deps-${{ hashFiles('pubspec.lock') }}

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Get commit count
        id: commit_count
        run: echo "COMMIT_COUNT=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT
 
      - name: Set version
        run: |
          # Set version based on commit count
          NEW_VERSION_NAME="0.0.${{ steps.commit_count.outputs.COMMIT_COUNT }}"
          
          # Update version in pubspec.yaml
          sed -i "s/^version: .*/version: $NEW_VERSION_NAME+${{ github.run_number }}/" pubspec.yaml

      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test
      - name: Install Linux build dependencies
        run: sudo apt-get update && sudo apt-get install -y libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      - run: flutter build linux --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/linux/x64/release/bundle

  build-appimage:
    runs-on: ubuntu-latest
    needs: build-linux
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: build/linux/x64/release/bundle

      - name: Download appimagetool
        run: |
          wget -O appimagetool.AppImage https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool.AppImage

      - name: Create AppDir structure
        run: |
          mkdir -p daily_inc.AppDir/usr/bin
          mkdir -p daily_inc.AppDir/usr/lib
          cp -r build/linux/x64/release/bundle/* daily_inc.AppDir/usr/bin/
          cp assets/icon/icon.png daily_inc.AppDir/
          echo "[Desktop Entry]
          Name=Daily Inc
          Exec=app
          Type=Application
          Icon=icon
          Terminal=false" > daily_inc.AppDir/daily_inc.desktop

      - name: Build AppImage
        run: ./appimagetool.AppImage daily_inc.AppDir

      - name: Rename AppImage
        run: mv Daily_Inc-x86_64.AppImage daily-inc.AppImage
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: appimage
          path: daily-inc.AppImage

  create-release:
    needs: [build-linux, build-appimage]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: artifacts/linux

      - uses: actions/download-artifact@v4
        with:
          name: appimage
          path: artifacts/appimage

      - name: Get commit count
        id: commit_count
        run: |
          git fetch origin
          git checkout main
          echo "COMMIT_COUNT=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT

      - name: Create test release
        uses: softprops/action-gh-release@v2
        with:
          name: Test Build Linux v0.0.${{ steps.commit_count.outputs.COMMIT_COUNT }}
          tag_name: v0.0.${{ steps.commit_count.outputs.COMMIT_COUNT }}-linux+${{ github.run_number }}
          draft: true
          prerelease: true
          files: |
            artifacts/appimage/daily-inc.AppImage
