name: Release Build

on:
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            /home/runner/.gradle/caches
            /home/runner/.gradle/wrapper
          key: ${{ runner.os }}-deps-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Get version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed -n 's/version: \([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p')
          echo "Current version from pubspec: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Set and bump version
        id: set_version
        run: |
          CURRENT_VERSION="${{ steps.get_version.outputs.VERSION }}"
          MAJOR_VERSION=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR_VERSION=$(( $(echo $CURRENT_VERSION | cut -d. -f2) + 1 ))
          PATCH_VERSION=0
          NEW_VERSION="$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION"
          echo "Release build. New version: $NEW_VERSION"
          echo "VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update pubspec.yaml for release and commit
        run: |
          NEW_VERSION="${{ steps.set_version.outputs.VERSION }}"
          # Update pubspec.yaml. The +build_number will be github.run_number
          sed -i "s/^version: .*/version: $NEW_VERSION+${{ github.run_number }}/" pubspec.yaml
          echo "Updated pubspec.yaml with version $NEW_VERSION+${{ github.run_number }}"
          
          # Commit and push
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add pubspec.yaml
          git commit -m "bump version to v${{ steps.set_version.outputs.VERSION }}"
          git push

      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test
      
      - name: Generate Release Keystore
        run: |
          cd android/app
          chmod +x ../generate-keystore.sh
          ../generate-keystore.sh
          cd ../..
      
      - name: Build APK
        run: flutter build apk --release --build-name=${{ steps.set_version.outputs.VERSION }} --build-number=${{ github.run_number }}
        env:
          JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64
      
      - name: Rename APK
        id: rename_apk
        run: |
          VERSION_NAME="${{ steps.set_version.outputs.VERSION }}"
          BUILD_NUMBER="${{ github.run_number }}"
          APK_NAME="daily-inc-v$VERSION_NAME+$BUILD_NUMBER.apk"
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/$APK_NAME
          echo "APK_PATH=build/app/outputs/flutter-apk/$APK_NAME" >> $GITHUB_OUTPUT
          echo "APK_NAME=$APK_NAME" >> $GITHUB_OUTPUT
          
      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: ${{ steps.rename_apk.outputs.APK_PATH }}

  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.gradle/caches
          key: ${{ runner.os }}-deps-${{ hashFiles('pubspec.lock') }}

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Get version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed -n 's/version: \([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p')
          echo "Current version from pubspec: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Set and bump version
        id: set_version
        run: |
          CURRENT_VERSION="${{ steps.get_version.outputs.VERSION }}"
          MAJOR_VERSION=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR_VERSION=$(( $(echo $CURRENT_VERSION | cut -d. -f2) + 1 ))
          PATCH_VERSION=0
          NEW_VERSION="$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION"
          echo "Release build. New version: $NEW_VERSION"
          echo "VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update pubspec.yaml for release and commit
        run: |
          NEW_VERSION="${{ steps.set_version.outputs.VERSION }}"
          # Update pubspec.yaml. The +build_number will be github.run_number
          sed -i "s/^version: .*/version: $NEW_VERSION+${{ github.run_number }}/" pubspec.yaml
          echo "Updated pubspec.yaml with version $NEW_VERSION+${{ github.run_number }}"
          
          # Commit and push
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add pubspec.yaml
          git commit -m "bump version to v${{ steps.set_version.outputs.VERSION }}"
          git push

      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test
      
      - name: Install Linux build dependencies
        run: sudo apt-get update && sudo apt-get install -y libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      
      - run: flutter build linux --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/linux/x64/release/bundle

  build-appimage:
    runs-on: ubuntu-latest
    needs: build-linux
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: build/linux/x64/release/bundle

      - name: Download appimagetool
        run: |
          wget -O appimagetool.AppImage https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool.AppImage

      - name: Create AppDir structure
        run: |
          mkdir -p daily_inc.AppDir/usr/bin
          mkdir -p daily_inc.AppDir/usr/lib
          cp -r build/linux/x64/release/bundle/* daily_inc.AppDir/usr/bin/
          cp assets/icon/icon.png daily_inc.AppDir/
          echo "[Desktop Entry]
          Name=Daily Inc
          Exec=app
          Type=Application
          Icon=icon
          Terminal=false" > daily_inc.AppDir/daily_inc.desktop

      - name: Build AppImage
        run: ./appimagetool.AppImage daily_inc.AppDir

      - name: Rename AppImage
        run: mv Daily_Inc-x86_64.AppImage daily-inc.AppImage
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: appimage
          path: daily-inc.AppImage

  create-release:
    needs: [build-android, build-linux, build-appimage]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: appimage
          path: artifacts/appimage

      - uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: artifacts/android

      - name: Get version
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed -n 's/version: \([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ steps.get_version.outputs.VERSION }}+${{ github.run_number }}
          tag_name: v${{ steps.get_version.outputs.VERSION }}+${{ github.run_number }}
          draft: true
          prerelease: false
          files: |
            artifacts/appimage/*
            artifacts/android/*