name: Test Build

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            /home/runner/.gradle/caches
            /home/runner/.gradle/wrapper
          key: ${{ runner.os }}-deps-${{ hashFiles('pubspec.lock') }}

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Get version and build number
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed -n 's/version: \([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p')
          echo "VERSION=$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "BUILD_NUMBER=${{ github.run_number }}" >> $GITHUB_OUTPUT

      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test

      - name: Setup Android Signing
        id: setup_signing
        env:
          KEY_JKS: ${{ secrets.KEY_JKS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          ALIAS_PASSWORD: ${{ secrets.ALIAS_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          echo "$KEY_JKS" | base64 --decode > android/app/release.keystore
          echo "storeFile=release.keystore" > android/key.properties
          echo "storePassword=$KEY_PASSWORD" >> android/key.properties
          echo "keyPassword=$ALIAS_PASSWORD" >> android/key.properties
          echo "keyAlias=$KEY_ALIAS" >> android/key.properties

      - name: Build per-ABI APKs
        if: steps.setup_signing.outcome == 'success'
        run: flutter build apk --release --split-per-abi --build-name=${{ steps.version.outputs.VERSION }} --build-number=${{ github.run_number }}
        env:
          JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64

      - name: Rename per-ABI APKs
        id: rename_apks
        run: |
          set -euo pipefail
          VERSION_NAME="${{ steps.version.outputs.VERSION }}"
          BUILD_NUMBER="${{ github.run_number }}"
          OUT_DIR="build/app/outputs/flutter-apk"
          declare -A MAP=( \
            ["app-arm64-v8a-release.apk"]="daily-inc-arm64-v8a-v${VERSION_NAME}+${BUILD_NUMBER}.apk" \
            ["app-armeabi-v7a-release.apk"]="daily-inc-armeabi-v7a-v${VERSION_NAME}+${BUILD_NUMBER}.apk" \
            ["app-x86_64-release.apk"]="daily-inc-x86_64-v${VERSION_NAME}+${BUILD_NUMBER}.apk" \
          )
          for SRC in "${!MAP[@]}"; do
            if [ -f "${OUT_DIR}/${SRC}" ]; then
              mv "${OUT_DIR}/${SRC}" "${OUT_DIR}/${MAP[$SRC]}"
            fi
          done
          echo "ARM64_APK=${OUT_DIR}/daily-inc-arm64-v8a-v${VERSION_NAME}+${BUILD_NUMBER}.apk" >> $GITHUB_OUTPUT
          echo "ARMEABI7_APK=${OUT_DIR}/daily-inc-armeabi-v7a-v${VERSION_NAME}+${BUILD_NUMBER}.apk" >> $GITHUB_OUTPUT
          echo "X86_64_APK=${OUT_DIR}/daily-inc-x86_64-v${VERSION_NAME}+${BUILD_NUMBER}.apk" >> $GITHUB_OUTPUT

      - name: Upload per-ABI APKs
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: |
            ${{ steps.rename_apks.outputs.ARM64_APK }}
            ${{ steps.rename_apks.outputs.ARMEABI7_APK }}
            ${{ steps.rename_apks.outputs.X86_64_APK }}

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Linux dependencies
        run: sudo apt update && sudo apt install -y libgtk-3-dev pkg-config libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: flutter pub get
      - run: flutter build linux --release
      - name: Package Linux Bundle
        run: |
          cd build/linux/x64/release/bundle
          tar -czvf daily-inc-v${{ needs.build-android.outputs.version }}+${{ github.run_number }}-linux.tar.gz *
          cd ../../../../../
      
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-release
          path: build/linux/x64/release/bundle/daily-inc-v${{ needs.build-android.outputs.version }}+${{ github.run_number }}-linux.tar.gz

  create-draft-release:
    needs: [build-android, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: android-release
          path: artifacts/android
      - uses: actions/download-artifact@v4
        with:
          name: linux-release
          path: artifacts/linux

      - name: Get commit info
        id: commit_info
        run: |
          echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "COMMIT_MSG=$(git log -1 --pretty=%s)" >> $GITHUB_OUTPUT

      - name: Create draft release
        uses: softprops/action-gh-release@v2
        with:
          name: Development Build v${{ needs.build-android.outputs.version }}+${{ github.run_number }}
          tag_name: v${{ needs.build-android.outputs.version }}+${{ github.run_number }}
          draft: true
          prerelease: true
          body: |
            Automated development build
            Commit: ${{ steps.commit_info.outputs.COMMIT_MSG }}
          files: |
            artifacts/android/*
            artifacts/linux/daily-inc-v${{ needs.build-android.outputs.version }}+${{ github.run_number }}-linux.tar.gz