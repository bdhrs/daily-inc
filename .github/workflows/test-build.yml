name: Test Build

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:

jobs:
  test-build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            /home/runner/.gradle/caches
            /home/runner/.gradle/wrapper
          key: ${{ runner.os }}-deps-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Get version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed -n 's/version: \([0-9]*\.[0-9]*\.[0-9]*\).*/\1/p')
          echo "Current version from pubspec: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test
      
      - name: Build APK
        run: flutter build apk --debug
        env:
          JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64
      
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk

  test-build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.gradle/caches
          key: ${{ runner.os }}-deps-${{ hashFiles('pubspec.lock') }}

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test
      
      - name: Install Linux build dependencies
        run: sudo apt-get update && sudo apt-get install -y libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      
      - run: flutter build linux --debug

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-debug-build
          path: build/linux/x64/debug/bundle

  create-draft-release:
    needs: [test-build-android, test-build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: debug-apk
          path: artifacts/android

      - uses: actions/download-artifact@v4
        with:
          name: linux-debug-build
          path: artifacts/linux

      - name: Get commit info
        id: commit_info
        run: |
          echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "COMMIT_MSG=$(git log -1 --pretty=%s)" >> $GITHUB_OUTPUT

      - name: Create draft release
        uses: softprops/action-gh-release@v2
        with:
          name: Test Build ${{ steps.commit_info.outputs.SHA }}
          tag_name: test-${{ steps.commit_info.outputs.SHA }}
          draft: true
          prerelease: true
          body: |
            Automated test build
            Commit: ${{ steps.commit_info.outputs.COMMIT_MSG }}
          files: |
            artifacts/android/app-debug.apk
            artifacts/linux/*